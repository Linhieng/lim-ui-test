import { PropType, defineComponent, provide } from 'vue'

import SchemaItems from './SchemaItems'
import { SCHEMA_FORM_CONTEXT_KEY } from './context'
import { Schema } from './types'

const PropsDefine = {
    schema: {
        type: Object as PropType<Schema>,
        required: true,
    },
    value: {
        // Ê≤°ÊúâÂÜô typeÔºåË°®Á§∫‰ªªÊÑèÂÄº
        required: true,
    },
    onChange: {
        type: Function as PropType<(value: any) => void>,
        required: true,
    },
} as const

// üìö SchemaForm ÊòØÂÖ•Âè£„ÄÇÂØπ‰∫éÁî®Êà∑Êù•Êó∂ÔºåÂÆÉÂè™Ë¥üË¥£‰º†ÂÖ•‰∏Ä‰∏™ SchemaÔºåËÄåÊàë‰ª¨ÔºàlibÔºâË¶ÅÂÅöÁöÑ‰∫ãÊÉÖÂ∞±ÊòØÂ∞ÜËøô‰∏™ Schema ËΩ¨Êç¢ÊàêÂØπÂ∫îÁöÑÁªÑ‰ª∂ËøõË°åÊ∏≤Êüì„ÄÇ
export default defineComponent({
    name: 'SchemaForm',
    props: PropsDefine,
    setup(props) {
        // ÂèØËÉΩËøòË¶ÅÂÜçÂÅö‰∏ÄÂ±ÇÂ∞ÅË£ÖÔºåÊâÄ‰ª•ÂçïÁã¨ÊãøÂá∫Êù•
        const handleChange = (v: any) => {
            props.onChange(v)
        }

        // üìö SchemaItems ÊòØ‰∏çÂèòÁöÑÔºå‰∏çÈúÄË¶ÅÂìçÂ∫îÊÄß
        provide(SCHEMA_FORM_CONTEXT_KEY, {
            SchemaItems,
        })

        return () => {
            const { schema, value } = props

            return (
                <SchemaItems
                    schema={schema}
                    rootSchema={schema}
                    value={value}
                    onChange={handleChange}
                />
            )
        }
    },
})
